// Code generated by ent, DO NOT EDIT.

package discard

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the discard type in the database.
	Label = "discard"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// EdgeReach holds the string denoting the reach edge name in mutations.
	EdgeReach = "reach"
	// EdgeCall holds the string denoting the call edge name in mutations.
	EdgeCall = "call"
	// EdgeDraw holds the string denoting the draw edge name in mutations.
	EdgeDraw = "draw"
	// Table holds the table name of the discard in the database.
	Table = "discards"
	// ReachTable is the table that holds the reach relation/edge.
	ReachTable = "reaches"
	// ReachInverseTable is the table name for the Reach entity.
	// It exists in this package in order to avoid circular dependency with the "reach" package.
	ReachInverseTable = "reaches"
	// ReachColumn is the table column denoting the reach relation/edge.
	ReachColumn = "discard_reach"
	// CallTable is the table that holds the call relation/edge.
	CallTable = "calls"
	// CallInverseTable is the table name for the Call entity.
	// It exists in this package in order to avoid circular dependency with the "call" package.
	CallInverseTable = "calls"
	// CallColumn is the table column denoting the call relation/edge.
	CallColumn = "discard_call"
	// DrawTable is the table that holds the draw relation/edge.
	DrawTable = "drawns"
	// DrawInverseTable is the table name for the Drawn entity.
	// It exists in this package in order to avoid circular dependency with the "drawn" package.
	DrawInverseTable = "drawns"
	// DrawColumn is the table column denoting the draw relation/edge.
	DrawColumn = "discard_draw"
)

// Columns holds all SQL columns for discard fields.
var Columns = []string{
	FieldID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
